FOR GCC (GNU)


1. in java IDE
- edit class Java, e.g HelloJNI.java, such as:
/*--------------------------------------------------------------------------*/
package jni;// <package_name>

/**
 *
 * @author dinhvan
 */
public class HelloJNI {  //  <class_name>
   static {
      System.load("C:\\_UsersDatas\\dinhvan\\Dropbox\\THESE\\HelloJNI\\dist\\HelloJNI.dll");	// <library_path> & <lib_name>
   }
 
   // Declare a native method sayHello() that receives nothing and returns void
   private native void sayHello();						// <native_func_name>
 
   // Test Driver
   public static void main(String[] args) {
      new HelloJNI().sayHello();  // invoke the native method
   }
}
/*--------------------------------------------------------------------------*/
-attention to <package_name>, <class_name>,<library_path> & <lib_name>, <native_func_name>


- build project to obtain <java_class>.class in <Project_root>\build\classes\<project_name>.<package_name> directory
2. in Window explorer
- enter to <project_root> directory, 
- open command dos
- call javah to compile <java_name>.class to <package_name>_<java_class>.h by using this intructor:

javah -jni -classpath C:\_UsersDatas\dinhvan\Dropbox\THESE\JNI\build\classes jni.HelloWorld
javah -jni -classpath C:\_UsersDatas\dinhvan\Dropbox\THESE\JNI\build\classes jni.HelloJNI

javah -jni -o <header_name>.h -jni -classpath <project_root>\build\classes <package_name>.<java_class>
- resuls as a file <header_name>.h, such as: jni_HelloWorld.h
/*--------------------------------------------------------------------------*/
/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class jni_HelloWorld */

#ifndef _Included_jni_HelloWorld
#define _Included_jni_HelloWorld
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     jni_HelloWorld
 * Method:    nativePrint
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_jni_HelloWorld_nativePrint
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
/*--------------------------------------------------------------------------*/
-attention to function_name

3. return to java IDE
-open new project C\C++ dynamique type, e.g HelloJNI as <cplus_name>
-paste file <header_name>.h to <cplus_root>  directory
-create a new C main file, copy <function_name> from <header_name>.h to C function, respect the parameters
-write the content of native function in C
-set properties of <cplus_name> project as:

	set include in C compiler: <java_root>\include, and <java_root>\include\win32
	set addition flag in C compiler: 
-shared -m32 -Wl,--add-stdcall-alias
		Note that the resultant dll will have dependencies on gcc and stdc++. 
		You can remove these dependancies with the following compiler flags: 
-static-libgcc -static-libstdc++

set output in linker: dist/<lib_name>.dll
- build Cplus project to obtain <lib_name>.dll in <cplus_root>\dist\, copy this <lib_path> to <java_name>.java
- run java class to test

/*------------------------------------------------------------------------------*/

cl -I<path_to_jni.h> -I<path_to_jni_md.h> -I<path_to_metis.h> -I<path_to_jni_function.h> -MD -LD metisDemo.c -FemetisDemo.dll -EHsc metis.lib

cl -I"C:\Program Files\Java\jdk1.8.0_25\include" -I"C:\Program Files\Java\jdk1.8.0_25\include\win32" -I"C:\_UsersDatas\dinhvan\Dropbox\THESE\JNIworkspace\metisDemo\include" -I"C:\_UsersDatas\dinhvan\Dropbox\THESE\JNIworkspace\metisDemo" -MD -LD metisDemo.c -FemetisDemo.dll metis.lib


gcc -Wl,--add-stdcall-alias -I"C:\Program Files\Java\jdk1.8.0_25\include" -I"C:\Program Files\Java\jdk1.8.0_25\include\win32" -I"C:\_UsersDatas\dinhvan\Dropbox\THESE\JNIworkspace\metisDemo\include" -I"C:\_UsersDatas\dinhvan\Dropbox\THESE\JNIworkspace\metisDemo" -shared -o metisDemo_a.dll metisDemo.c -L. -lmetis




==========================================================================

FOR CL (MCSV)

javah -jni -classpath C:\_UsersDatas\dinhvan\Dropbox\THESE\JNI\build\classes jni.metisJNI

cl -I"path_to_jni.h" -I"path_to_jnimd.h" -I"path_to_jni_metisJNI.h" -MD -LD metisJNINative.c -FemetisJNINative.dll /link metis.lib /LIBPATH:path_to_metis.lib










